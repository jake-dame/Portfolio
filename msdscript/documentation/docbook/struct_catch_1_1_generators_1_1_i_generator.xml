<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_catch_1_1_generators_1_1_i_generator" xml:lang="en-US">
<title>Catch::Generators::IGenerator&lt; T &gt; Struct Template Reference</title>
<indexterm><primary>Catch::Generators::IGenerator&lt; T &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;catch.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for Catch::Generators::IGenerator&lt; T &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_catch_1_1_generators_1_1_i_generator.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_catch_1_1true__given">using</link> <link linkend="_struct_catch_1_1_generators_1_1_i_generator_1a1f8677875fe0ff31f39c60d45504b9a5">type</link> = <link linkend="_struct_catch_1_1true__given">T</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_catch_1_1true__given">virtual</link> <link linkend="_struct_catch_1_1_generators_1_1_i_generator_1afe5b6eecbbd735e69748d68574611747">~IGenerator</link> ()=<link linkend="_struct_catch_1_1true__given">default</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">virtual</link> <link linkend="_struct_catch_1_1true__given">T</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp; <link linkend="_struct_catch_1_1_generators_1_1_i_generator_1a0fb6da789cda5b4e90f036737db82485">get</link> () <link linkend="_struct_catch_1_1true__given">const</link> =0</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_class_catch_1_1_generators_1_1_generator_untyped_base">Catch::Generators::GeneratorUntypedBase</link>        <itemizedlist>
            <listitem><para><link linkend="_class_catch_1_1_generators_1_1_generator_untyped_base_1a00ff0179d739c3016756b6cf56fabbad">GeneratorUntypedBase</link> ()=<link linkend="_struct_catch_1_1true__given">default</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">virtual</link> <link linkend="_class_catch_1_1_generators_1_1_generator_untyped_base_1a6f05f8099fdc5744a7aff68aa8c09c7f">~GeneratorUntypedBase</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">virtual</link> <link linkend="_struct_catch_1_1true__given">bool</link> <link linkend="_class_catch_1_1_generators_1_1_generator_untyped_base_1aeed3c0cd6233c5f553549e453b8d6638">next</link> ()=0</para>
</listitem>
        </itemizedlist>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_struct_catch_1_1_generators_1_1_i_generator_1a1f8677875fe0ff31f39c60d45504b9a5"/><section>
    <title>type</title>
<indexterm><primary>type</primary><secondary>Catch::Generators::IGenerator&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Catch::Generators::IGenerator&lt; T &gt;</primary><secondary>type</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1true__given">typename</link> <link linkend="_struct_catch_1_1true__given">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_struct_catch_1_1true__given">using</link> <link linkend="_struct_catch_1_1_generators_1_1_i_generator">Catch::Generators::IGenerator</link>&lt; <link linkend="_struct_catch_1_1true__given">T</link> &gt;::type = <link linkend="_struct_catch_1_1true__given">T</link></computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_catch_1_1_generators_1_1_i_generator_1afe5b6eecbbd735e69748d68574611747"/><section>
    <title>~IGenerator()</title>
<indexterm><primary>~IGenerator</primary><secondary>Catch::Generators::IGenerator&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Catch::Generators::IGenerator&lt; T &gt;</primary><secondary>~IGenerator</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1true__given">typename</link> <link linkend="_struct_catch_1_1true__given">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_struct_catch_1_1true__given">virtual</link> <link linkend="_struct_catch_1_1_generators_1_1_i_generator">Catch::Generators::IGenerator</link>&lt; <link linkend="_struct_catch_1_1true__given">T</link> &gt;::~<link linkend="_struct_catch_1_1_generators_1_1_i_generator">IGenerator</link> ( )<computeroutput>[virtual]</computeroutput>, <computeroutput>[default]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_catch_1_1_generators_1_1_i_generator_1a0fb6da789cda5b4e90f036737db82485"/><section>
    <title>get()</title>
<indexterm><primary>get</primary><secondary>Catch::Generators::IGenerator&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Catch::Generators::IGenerator&lt; T &gt;</primary><secondary>get</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1true__given">typename</link> <link linkend="_struct_catch_1_1true__given">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_struct_catch_1_1true__given">virtual</link> <link linkend="_struct_catch_1_1true__given">T</link> <link linkend="_struct_catch_1_1true__given">const</link>  &amp; <link linkend="_struct_catch_1_1_generators_1_1_i_generator">Catch::Generators::IGenerator</link>&lt; <link linkend="_struct_catch_1_1true__given">T</link> &gt;::get ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_catch_1_1_generators_1_1_single_value_generator_1af1ed1913c9c73687fd74378fe5394382">Catch::Generators::SingleValueGenerator&lt; T &gt;</link>, <link linkend="_class_catch_1_1_generators_1_1_fixed_values_generator_1a8d64d3d943f3029d1669ae3cf91cc493">Catch::Generators::FixedValuesGenerator&lt; T &gt;</link>, <link linkend="_class_catch_1_1_generators_1_1_generators_1ad86b343eac34f6771358507dd8ea98c4">Catch::Generators::Generators&lt; T &gt;</link>, <link linkend="_class_catch_1_1_generators_1_1_take_generator_1a7240fb96c311b7d7fde32d1fb5bb67c6">Catch::Generators::TakeGenerator&lt; T &gt;</link>, <link linkend="_class_catch_1_1_generators_1_1_filter_generator_1a903396f7cf5f1a04379b7c917351e6da">Catch::Generators::FilterGenerator&lt; T, Predicate &gt;</link>, <link linkend="_class_catch_1_1_generators_1_1_repeat_generator_1a1b5a4018df276b05dc48e5fa0bcd3d28">Catch::Generators::RepeatGenerator&lt; T &gt;</link>, <link linkend="_class_catch_1_1_generators_1_1_map_generator_1abd7ffdef7f7c8575331146c4a95141ad">Catch::Generators::MapGenerator&lt; T, U, Func &gt;</link>, <link linkend="_class_catch_1_1_generators_1_1_chunk_generator_1afab9d06c84aa469b3af60eb3e8f10597">Catch::Generators::ChunkGenerator&lt; T &gt;</link>, <link linkend="_class_catch_1_1_generators_1_1_random_floating_generator_1a307eff56c58d4c6a223f35ac4d4ba710">Catch::Generators::RandomFloatingGenerator&lt; Float &gt;</link>, <link linkend="_class_catch_1_1_generators_1_1_random_integer_generator_1af160cf856809beca4503491481a4865e">Catch::Generators::RandomIntegerGenerator&lt; Integer &gt;</link>, <link linkend="_class_catch_1_1_generators_1_1_range_generator_1a5484de93ae75cf01cff02172c6875848">Catch::Generators::RangeGenerator&lt; T &gt;</link>, and <link linkend="_class_catch_1_1_generators_1_1_iterator_generator_1a21783f931147e4ba2300070c5c417db5">Catch::Generators::IteratorGenerator&lt; T &gt;</link>.</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
/Users/u0858882/Desktop/msdscript/msdscript/src/<link linkend="_catch_8h">catch.h</link></section>
</section>
