<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_catch_1_1_test_case_info" xml:lang="en-US">
<title>Catch::TestCaseInfo Struct Reference</title>
<indexterm><primary>Catch::TestCaseInfo</primary></indexterm>
<para>
<computeroutput>#include &lt;catch.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for Catch::TestCaseInfo:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_catch_1_1_test_case_info.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eac">SpecialProperties</link> { <?linebreak?><link linkend="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eacaf94e9de5f8ec1e53b1aa761ec564b31a">None</link> = 0
, <link linkend="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eacaeda53906c14c3973e0980900c132b8f7">IsHidden</link> = 1 &lt;&lt; 1
, <link linkend="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eacaf9002285bccfc343935958f3953f4c01">ShouldFail</link> = 1 &lt;&lt; 2
, <link linkend="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eacadf1873d3271121cb9f52d7df45b416ca">MayFail</link> = 1 &lt;&lt; 3
, <?linebreak?><link linkend="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eaca4704adf89ed7f7ad653d08f99813a974">Throws</link> = 1 &lt;&lt; 4
, <link linkend="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eaca06472887b53fda9eb8015d74e7fd2cf1">NonPortable</link> = 1 &lt;&lt; 5
, <link linkend="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eacad0e25e337246ae34d555fe53baf81c16">Benchmark</link> = 1 &lt;&lt; 6
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_catch_1_1_test_case_info_1ad1a6b08b5a83d1c5eb4596b727b5305f">TestCaseInfo</link> (std::string <link linkend="_struct_catch_1_1true__given">const</link> &amp;<link linkend="_struct_catch_1_1true__given">_name</link>, std::string <link linkend="_struct_catch_1_1true__given">const</link> &amp;<link linkend="_struct_catch_1_1true__given">_className</link>, std::string <link linkend="_struct_catch_1_1true__given">const</link> &amp;<link linkend="_struct_catch_1_1true__given">_description</link>, std::vector&lt; std::string &gt; <link linkend="_struct_catch_1_1true__given">const</link> &amp;<link linkend="_struct_catch_1_1true__given">_tags</link>, <link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp;<link linkend="_struct_catch_1_1true__given">_lineInfo</link>)</para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">bool</link> <link linkend="_struct_catch_1_1_test_case_info_1a934b1a0952700743e99d62ec1731a2e2">isHidden</link> () <link linkend="_struct_catch_1_1true__given">const</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">bool</link> <link linkend="_struct_catch_1_1_test_case_info_1afc70d4379a2070cc22b693ffe3932c1a">throws</link> () <link linkend="_struct_catch_1_1true__given">const</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">bool</link> <link linkend="_struct_catch_1_1_test_case_info_1a5f37291295e3a6de2dd85324c941edaf">okToFail</link> () <link linkend="_struct_catch_1_1true__given">const</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">bool</link> <link linkend="_struct_catch_1_1_test_case_info_1abe33d81233230cdae8afa714688e905b">expectedToFail</link> () <link linkend="_struct_catch_1_1true__given">const</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_struct_catch_1_1_test_case_info_1a17506de67fb18e27511c17f8a81119d8">tagsAsString</link> () <link linkend="_struct_catch_1_1true__given">const</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>std::string <link linkend="_struct_catch_1_1_test_case_info_1a463794e2f5cfead307c93efd134ade36">name</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_struct_catch_1_1_test_case_info_1a1a5e0825132a38d091defdebbf2f8ce9">className</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_struct_catch_1_1_test_case_info_1a37fe2db9425bc45f6a33893eac31198e">description</link></para>
</listitem>
            <listitem><para>std::vector&lt; std::string &gt; <link linkend="_struct_catch_1_1_test_case_info_1a150a7cbca1dd0c91799ccb14ff822eb0">tags</link></para>
</listitem>
            <listitem><para>std::vector&lt; std::string &gt; <link linkend="_struct_catch_1_1_test_case_info_1a844e3de9baf6e53cadfba9733c236bfe">lcaseTags</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> <link linkend="_struct_catch_1_1_test_case_info_1aa9407b7f442655b51a2aad24b3fa2fd3">lineInfo</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eac">SpecialProperties</link> <link linkend="_struct_catch_1_1_test_case_info_1afc1e84bd7a2e180895a06d9131302af0">properties</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_catch_1_1true__given">void</link> <link linkend="_struct_catch_1_1_test_case_info_1a0fe44abaf18ae7c26f98a9fc2b08679c">setTags</link> (<link linkend="_struct_catch_1_1_test_case_info">TestCaseInfo</link> &amp;<link linkend="_struct_catch_1_1true__given">testCaseInfo</link>, std::vector&lt; std::string &gt; <link linkend="_struct_catch_1_1_test_case_info_1a150a7cbca1dd0c91799ccb14ff822eb0">tags</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Enumeration Documentation</title>
<anchor xml:id="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eac"/><section>
    <title>SpecialProperties</title>
<indexterm><primary>SpecialProperties</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>SpecialProperties</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">enum</link> <link linkend="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eac">Catch::TestCaseInfo::SpecialProperties</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>None</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>None</secondary></indexterm>
<anchor xml:id="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eacaf94e9de5f8ec1e53b1aa761ec564b31a"/>None</entry><entry></entry></row><row><entry><indexterm><primary>IsHidden</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>IsHidden</secondary></indexterm>
<anchor xml:id="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eacaeda53906c14c3973e0980900c132b8f7"/>IsHidden</entry><entry></entry></row><row><entry><indexterm><primary>ShouldFail</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>ShouldFail</secondary></indexterm>
<anchor xml:id="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eacaf9002285bccfc343935958f3953f4c01"/>ShouldFail</entry><entry></entry></row><row><entry><indexterm><primary>MayFail</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>MayFail</secondary></indexterm>
<anchor xml:id="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eacadf1873d3271121cb9f52d7df45b416ca"/>MayFail</entry><entry></entry></row><row><entry><indexterm><primary>Throws</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>Throws</secondary></indexterm>
<anchor xml:id="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eaca4704adf89ed7f7ad653d08f99813a974"/>Throws</entry><entry></entry></row><row><entry><indexterm><primary>NonPortable</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>NonPortable</secondary></indexterm>
<anchor xml:id="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eaca06472887b53fda9eb8015d74e7fd2cf1"/>NonPortable</entry><entry></entry></row><row><entry><indexterm><primary>Benchmark</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>Benchmark</secondary></indexterm>
<anchor xml:id="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eacad0e25e337246ae34d555fe53baf81c16"/>Benchmark</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_catch_1_1_test_case_info_1ad1a6b08b5a83d1c5eb4596b727b5305f"/><section>
    <title>TestCaseInfo()</title>
<indexterm><primary>TestCaseInfo</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>TestCaseInfo</secondary></indexterm>
<para><computeroutput>Catch::TestCaseInfo::TestCaseInfo (std::string <link linkend="_struct_catch_1_1true__given">const</link> &amp; _name, std::string <link linkend="_struct_catch_1_1true__given">const</link> &amp; _className, std::string <link linkend="_struct_catch_1_1true__given">const</link> &amp; _description, std::vector&lt; std::string &gt; <link linkend="_struct_catch_1_1true__given">const</link> &amp; _tags, <link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp; _lineInfo)</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_catch_1_1_test_case_info_1abe33d81233230cdae8afa714688e905b"/><section>
    <title>expectedToFail()</title>
<indexterm><primary>expectedToFail</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>expectedToFail</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">bool</link> Catch::TestCaseInfo::expectedToFail ( ) const</computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_test_case_info_1a934b1a0952700743e99d62ec1731a2e2"/><section>
    <title>isHidden()</title>
<indexterm><primary>isHidden</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>isHidden</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">bool</link> Catch::TestCaseInfo::isHidden ( ) const</computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_test_case_info_1a5f37291295e3a6de2dd85324c941edaf"/><section>
    <title>okToFail()</title>
<indexterm><primary>okToFail</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>okToFail</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">bool</link> Catch::TestCaseInfo::okToFail ( ) const</computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_test_case_info_1a17506de67fb18e27511c17f8a81119d8"/><section>
    <title>tagsAsString()</title>
<indexterm><primary>tagsAsString</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>tagsAsString</secondary></indexterm>
<para><computeroutput>std::string Catch::TestCaseInfo::tagsAsString ( ) const</computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_test_case_info_1afc70d4379a2070cc22b693ffe3932c1a"/><section>
    <title>throws()</title>
<indexterm><primary>throws</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>throws</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">bool</link> Catch::TestCaseInfo::throws ( ) const</computeroutput></para></section>
</section>
<section>
<title>Friends And Related Symbol Documentation</title>
<anchor xml:id="_struct_catch_1_1_test_case_info_1a0fe44abaf18ae7c26f98a9fc2b08679c"/><section>
    <title>setTags</title>
<indexterm><primary>setTags</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>setTags</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">void</link> setTags (<link linkend="_struct_catch_1_1_test_case_info">TestCaseInfo</link> &amp; testCaseInfo, std::vector&lt; std::string &gt; tags)<computeroutput>[friend]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_catch_1_1_test_case_info_1a1a5e0825132a38d091defdebbf2f8ce9"/><section>
    <title>className</title>
<indexterm><primary>className</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>className</secondary></indexterm>
<para><computeroutput>std::string Catch::TestCaseInfo::className</computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_test_case_info_1a37fe2db9425bc45f6a33893eac31198e"/><section>
    <title>description</title>
<indexterm><primary>description</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>description</secondary></indexterm>
<para><computeroutput>std::string Catch::TestCaseInfo::description</computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_test_case_info_1a844e3de9baf6e53cadfba9733c236bfe"/><section>
    <title>lcaseTags</title>
<indexterm><primary>lcaseTags</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>lcaseTags</secondary></indexterm>
<para><computeroutput>std::vector&lt;std::string&gt; Catch::TestCaseInfo::lcaseTags</computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_test_case_info_1aa9407b7f442655b51a2aad24b3fa2fd3"/><section>
    <title>lineInfo</title>
<indexterm><primary>lineInfo</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>lineInfo</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> Catch::TestCaseInfo::lineInfo</computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_test_case_info_1a463794e2f5cfead307c93efd134ade36"/><section>
    <title>name</title>
<indexterm><primary>name</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>name</secondary></indexterm>
<para><computeroutput>std::string Catch::TestCaseInfo::name</computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_test_case_info_1afc1e84bd7a2e180895a06d9131302af0"/><section>
    <title>properties</title>
<indexterm><primary>properties</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>properties</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1_test_case_info_1a39b232f74b4a7a6f2183b96759027eac">SpecialProperties</link> Catch::TestCaseInfo::properties</computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_test_case_info_1a150a7cbca1dd0c91799ccb14ff822eb0"/><section>
    <title>tags</title>
<indexterm><primary>tags</primary><secondary>Catch::TestCaseInfo</secondary></indexterm>
<indexterm><primary>Catch::TestCaseInfo</primary><secondary>tags</secondary></indexterm>
<para><computeroutput>std::vector&lt;std::string&gt; Catch::TestCaseInfo::tags</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
/Users/u0858882/Desktop/msdscript/msdscript/src/<link linkend="_catch_8h">catch.h</link></section>
</section>
