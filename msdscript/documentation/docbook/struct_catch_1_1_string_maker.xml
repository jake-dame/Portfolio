<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_catch_1_1_string_maker" xml:lang="en-US">
<title>Catch::StringMaker&lt; T, typename &gt; Struct Template Reference</title>
<indexterm><primary>Catch::StringMaker&lt; T, typename &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;catch.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;<link linkend="_struct_catch_1_1true__given">typename</link> <link linkend="_struct_catch_1_1true__given">Fake</link>  = T&gt; </para><para><link linkend="_struct_catch_1_1true__given">static</link> std::enable_if&lt;<link linkend="_class_catch_1_1_detail_1_1_is_stream_insertable">::Catch::Detail::IsStreamInsertable</link>&lt; <link linkend="_struct_catch_1_1true__given">Fake</link> &gt;::value, std::string &gt;::type <link linkend="_struct_catch_1_1_string_maker_1a98ebf81ba6ef3cfd72b23316e291d3d0">convert</link> (<link linkend="_struct_catch_1_1true__given">const</link> <link linkend="_struct_catch_1_1true__given">Fake</link> &amp;value)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_struct_catch_1_1true__given">typename</link> <link linkend="_struct_catch_1_1true__given">Fake</link>  = T&gt; </para><para><link linkend="_struct_catch_1_1true__given">static</link> std::enable_if&lt;!<link linkend="_class_catch_1_1_detail_1_1_is_stream_insertable">::Catch::Detail::IsStreamInsertable</link>&lt; <link linkend="_struct_catch_1_1true__given">Fake</link> &gt;::value, std::string &gt;::type <link linkend="_struct_catch_1_1_string_maker_1ac23f621d0bed26c4a511d4f5c37abb91">convert</link> (<link linkend="_struct_catch_1_1true__given">const</link> <link linkend="_struct_catch_1_1true__given">Fake</link> &amp;value)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_catch_1_1_string_maker_1a98ebf81ba6ef3cfd72b23316e291d3d0"/><section>
    <title>convert()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>convert</primary><secondary>Catch::StringMaker&lt; T, typename &gt;</secondary></indexterm>
<indexterm><primary>Catch::StringMaker&lt; T, typename &gt;</primary><secondary>convert</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1true__given">typename</link> <link linkend="_struct_catch_1_1true__given">T</link> , <link linkend="_struct_catch_1_1true__given">typename</link>  = void&gt; </computeroutput><computeroutput>template&lt;<link linkend="_struct_catch_1_1true__given">typename</link> <link linkend="_struct_catch_1_1true__given">Fake</link>  = T&gt; </computeroutput><para><computeroutput><link linkend="_struct_catch_1_1true__given">static</link> std::enable_if&lt;<link linkend="_class_catch_1_1_detail_1_1_is_stream_insertable">::Catch::Detail::IsStreamInsertable</link>&lt; <link linkend="_struct_catch_1_1true__given">Fake</link> &gt;::value, std::string &gt;::type <link linkend="_struct_catch_1_1_string_maker">Catch::StringMaker</link>&lt; <link linkend="_struct_catch_1_1true__given">T</link>, <link linkend="_struct_catch_1_1true__given">typename</link> &gt;::convert (<link linkend="_struct_catch_1_1true__given">const</link> <link linkend="_struct_catch_1_1true__given">Fake</link> &amp; value)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_string_maker_1ac23f621d0bed26c4a511d4f5c37abb91"/><section>
    <title>convert()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>convert</primary><secondary>Catch::StringMaker&lt; T, typename &gt;</secondary></indexterm>
<indexterm><primary>Catch::StringMaker&lt; T, typename &gt;</primary><secondary>convert</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1true__given">typename</link> <link linkend="_struct_catch_1_1true__given">T</link> , <link linkend="_struct_catch_1_1true__given">typename</link>  = void&gt; </computeroutput><computeroutput>template&lt;<link linkend="_struct_catch_1_1true__given">typename</link> <link linkend="_struct_catch_1_1true__given">Fake</link>  = T&gt; </computeroutput><para><computeroutput><link linkend="_struct_catch_1_1true__given">static</link> std::enable_if&lt;!<link linkend="_class_catch_1_1_detail_1_1_is_stream_insertable">::Catch::Detail::IsStreamInsertable</link>&lt; <link linkend="_struct_catch_1_1true__given">Fake</link> &gt;::value, std::string &gt;::type <link linkend="_struct_catch_1_1_string_maker">Catch::StringMaker</link>&lt; <link linkend="_struct_catch_1_1true__given">T</link>, <link linkend="_struct_catch_1_1true__given">typename</link> &gt;::convert (<link linkend="_struct_catch_1_1true__given">const</link> <link linkend="_struct_catch_1_1true__given">Fake</link> &amp; value)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
/Users/u0858882/Desktop/msdscript/msdscript/src/<link linkend="_catch_8h">catch.h</link></section>
</section>
