<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_catch_1_1_lazy_expression" xml:lang="en-US">
<title>Catch::LazyExpression Class Reference</title>
<indexterm><primary>Catch::LazyExpression</primary></indexterm>
<para>
<computeroutput>#include &lt;catch.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_catch_1_1_lazy_expression_1a47186c2487bd4bf871e870ba8048553a">LazyExpression</link> (<link linkend="_struct_catch_1_1true__given">bool</link> <link linkend="_struct_catch_1_1true__given">isNegated</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_catch_1_1_lazy_expression_1ab82d5e94df0e159b018fbde0170e46f8">LazyExpression</link> (<link linkend="_class_catch_1_1_lazy_expression">LazyExpression</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp;<link linkend="_struct_catch_1_1true__given">other</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_catch_1_1_lazy_expression">LazyExpression</link> &amp; <link linkend="_class_catch_1_1_lazy_expression_1a1b080e25fdfdecbc3e475d0e96cf0fd4">operator=</link> (<link linkend="_class_catch_1_1_lazy_expression">LazyExpression</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp;)=<link linkend="_struct_catch_1_1true__given">delete</link></para>
</listitem>
            <listitem><para><link linkend="_class_catch_1_1_lazy_expression_1acdb846cb230cecfc6aca7a925b31fbca">operator bool</link> () <link linkend="_struct_catch_1_1true__given">const</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_catch_1_1_i_transient_expression">ITransientExpression</link> <link linkend="_struct_catch_1_1true__given">const</link>  * <link linkend="_class_catch_1_1_lazy_expression_1a5a9ce4c2401a262c21b4e107551180bc">m_transientExpression</link> = <link linkend="_struct_catch_1_1true__given">nullptr</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">bool</link> <link linkend="_class_catch_1_1_lazy_expression_1a975fdfe2bb139512024bb479d478425e">m_isNegated</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_catch_1_1true__given">class</link> <link linkend="_class_catch_1_1_lazy_expression_1a4301a3aa57b612dd8b6ef8461742ecab">AssertionHandler</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">struct</link> <link linkend="_class_catch_1_1_lazy_expression_1a64019eb137f5ce447cdc71cb80b6e7a4">AssertionStats</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">class</link> <link linkend="_class_catch_1_1_lazy_expression_1af3aa096bb29a772bc534830f29a2ce7a">RunContext</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">auto</link> <link linkend="_class_catch_1_1_lazy_expression_1aa01086581cab2fcd2d4580b8fa787dfc">operator&lt;&lt;</link> (std::ostream &amp;<link linkend="_struct_catch_1_1true__given">os</link>, <link linkend="_class_catch_1_1_lazy_expression">LazyExpression</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp;<link linkend="_struct_catch_1_1true__given">lazyExpr</link>) -&gt; std::ostream &amp;</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_catch_1_1_lazy_expression_1a47186c2487bd4bf871e870ba8048553a"/><section>
    <title>LazyExpression()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>LazyExpression</primary><secondary>Catch::LazyExpression</secondary></indexterm>
<indexterm><primary>Catch::LazyExpression</primary><secondary>LazyExpression</secondary></indexterm>
<para><computeroutput>Catch::LazyExpression::LazyExpression (<link linkend="_struct_catch_1_1true__given">bool</link> isNegated)</computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_lazy_expression_1ab82d5e94df0e159b018fbde0170e46f8"/><section>
    <title>LazyExpression()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>LazyExpression</primary><secondary>Catch::LazyExpression</secondary></indexterm>
<indexterm><primary>Catch::LazyExpression</primary><secondary>LazyExpression</secondary></indexterm>
<para><computeroutput>Catch::LazyExpression::LazyExpression (<link linkend="_class_catch_1_1_lazy_expression">LazyExpression</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp; other)</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_catch_1_1_lazy_expression_1acdb846cb230cecfc6aca7a925b31fbca"/><section>
    <title>operator bool()</title>
<indexterm><primary>operator bool</primary><secondary>Catch::LazyExpression</secondary></indexterm>
<indexterm><primary>Catch::LazyExpression</primary><secondary>operator bool</secondary></indexterm>
<para><computeroutput>Catch::LazyExpression::operator <link linkend="_struct_catch_1_1true__given">bool</link> ( ) const<computeroutput>[explicit]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_lazy_expression_1a1b080e25fdfdecbc3e475d0e96cf0fd4"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>Catch::LazyExpression</secondary></indexterm>
<indexterm><primary>Catch::LazyExpression</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_class_catch_1_1_lazy_expression">LazyExpression</link> &amp; Catch::LazyExpression::operator= (<link linkend="_class_catch_1_1_lazy_expression">LazyExpression</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp; )<computeroutput>[delete]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Friends And Related Symbol Documentation</title>
<anchor xml:id="_class_catch_1_1_lazy_expression_1a4301a3aa57b612dd8b6ef8461742ecab"/><section>
    <title>AssertionHandler</title>
<indexterm><primary>AssertionHandler</primary><secondary>Catch::LazyExpression</secondary></indexterm>
<indexterm><primary>Catch::LazyExpression</primary><secondary>AssertionHandler</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">friend</link> <link linkend="_struct_catch_1_1true__given">class</link> <link linkend="_class_catch_1_1_assertion_handler">AssertionHandler</link><computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_lazy_expression_1a64019eb137f5ce447cdc71cb80b6e7a4"/><section>
    <title>AssertionStats</title>
<indexterm><primary>AssertionStats</primary><secondary>Catch::LazyExpression</secondary></indexterm>
<indexterm><primary>Catch::LazyExpression</primary><secondary>AssertionStats</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">friend</link> <link linkend="_struct_catch_1_1true__given">struct</link> AssertionStats<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_lazy_expression_1aa01086581cab2fcd2d4580b8fa787dfc"/><section>
    <title>operator&lt;&lt;</title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>Catch::LazyExpression</secondary></indexterm>
<indexterm><primary>Catch::LazyExpression</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">auto</link> <link linkend="_struct_catch_1_1true__given">operator</link>&lt;&lt; (std::ostream &amp; os, <link linkend="_class_catch_1_1_lazy_expression">LazyExpression</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp; lazyExpr) -&gt;  std::ostream &amp;<computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_lazy_expression_1af3aa096bb29a772bc534830f29a2ce7a"/><section>
    <title>RunContext</title>
<indexterm><primary>RunContext</primary><secondary>Catch::LazyExpression</secondary></indexterm>
<indexterm><primary>Catch::LazyExpression</primary><secondary>RunContext</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">friend</link> <link linkend="_struct_catch_1_1true__given">class</link> RunContext<computeroutput>[friend]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_catch_1_1_lazy_expression_1a975fdfe2bb139512024bb479d478425e"/><section>
    <title>m_isNegated</title>
<indexterm><primary>m_isNegated</primary><secondary>Catch::LazyExpression</secondary></indexterm>
<indexterm><primary>Catch::LazyExpression</primary><secondary>m_isNegated</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">bool</link> Catch::LazyExpression::m_isNegated<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_lazy_expression_1a5a9ce4c2401a262c21b4e107551180bc"/><section>
    <title>m_transientExpression</title>
<indexterm><primary>m_transientExpression</primary><secondary>Catch::LazyExpression</secondary></indexterm>
<indexterm><primary>Catch::LazyExpression</primary><secondary>m_transientExpression</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1_i_transient_expression">ITransientExpression</link> <link linkend="_struct_catch_1_1true__given">const</link>* Catch::LazyExpression::m_transientExpression = <link linkend="_struct_catch_1_1true__given">nullptr</link><computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
/Users/u0858882/Desktop/msdscript/msdscript/src/<link linkend="_catch_8h">catch.h</link></section>
</section>
