<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of" xml:lang="en-US">
<title>Catch::Matchers::Impl::MatchAnyOf&lt; ArgT &gt; Struct Template Reference</title>
<indexterm><primary>Catch::Matchers::Impl::MatchAnyOf&lt; ArgT &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;catch.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for Catch::Matchers::Impl::MatchAnyOf&lt; ArgT &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_catch_1_1true__given">bool</link> <link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of_1a8a3e8338f979e56277dcf553efb78dc0">match</link> (<link linkend="_struct_catch_1_1true__given">ArgT</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp;<link linkend="_struct_catch_1_1true__given">arg</link>) <link linkend="_struct_catch_1_1true__given">const</link> <link linkend="_struct_catch_1_1true__given">override</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of_1a315285204df93d1f8e72f50dd66eb709">describe</link> () <link linkend="_struct_catch_1_1true__given">const</link> <link linkend="_struct_catch_1_1true__given">override</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of">MatchAnyOf</link>&lt; <link linkend="_struct_catch_1_1true__given">ArgT</link> &gt; <link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of_1add743d0bf073b81a204dc9997fbd2e30">operator||</link> (<link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base">MatcherBase</link>&lt; <link linkend="_struct_catch_1_1true__given">ArgT</link> &gt; <link linkend="_struct_catch_1_1true__given">const</link> &amp;<link linkend="_struct_catch_1_1true__given">other</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base">Catch::Matchers::Impl::MatcherBase&lt; ArgT &gt;</link>        <itemizedlist>
            <listitem><para><link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_match_all_of">MatchAllOf</link>&lt; <link linkend="_struct_catch_1_1true__given">ArgT</link> &gt; <link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base_1aae4a9827601f6f26a52126e193d012de">operator&amp;&amp;</link> (<link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base">MatcherBase</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp;<link linkend="_struct_catch_1_1true__given">other</link>) <link linkend="_struct_catch_1_1true__given">const</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of">MatchAnyOf</link>&lt; <link linkend="_struct_catch_1_1true__given">ArgT</link> &gt; <link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base_1a5f8542b8f1567a6f9c65d0a6da7b679b">operator||</link> (<link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base">MatcherBase</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp;<link linkend="_struct_catch_1_1true__given">other</link>) <link linkend="_struct_catch_1_1true__given">const</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_match_not_of">MatchNotOf</link>&lt; <link linkend="_struct_catch_1_1true__given">ArgT</link> &gt; <link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base_1a5bb94bf2ff5c7ef73b7c11eb173bdf3b">operator!</link> () <link linkend="_struct_catch_1_1true__given">const</link></para>
</listitem>
        </itemizedlist>
Public Member Functions inherited from <link linkend="_class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base">Catch::Matchers::Impl::MatcherUntypedBase</link>        <itemizedlist>
            <listitem><para><link linkend="_class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1ab65764dc245d85e2b268d3be870b650a">MatcherUntypedBase</link> ()=<link linkend="_struct_catch_1_1true__given">default</link></para>
</listitem>
            <listitem><para><link linkend="_class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a985fd3c3ffcc9f2e8dc7a330130040b0">MatcherUntypedBase</link> (<link linkend="_class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base">MatcherUntypedBase</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp;)=<link linkend="_struct_catch_1_1true__given">default</link></para>
</listitem>
            <listitem><para><link linkend="_class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base">MatcherUntypedBase</link> &amp; <link linkend="_class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a1d446c018ecedb2ef633d9426d5f7914">operator=</link> (<link linkend="_class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base">MatcherUntypedBase</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp;)=<link linkend="_struct_catch_1_1true__given">delete</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a5982c7c80ca71dfe2298babadad7a453">toString</link> () <link linkend="_struct_catch_1_1true__given">const</link></para>
</listitem>
        </itemizedlist>
Public Member Functions inherited from <link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_matcher_method">Catch::Matchers::Impl::MatcherMethod&lt; ObjectT &gt;</link>        <itemizedlist>
            <listitem><para><link linkend="_struct_catch_1_1true__given">virtual</link> <link linkend="_struct_catch_1_1true__given">bool</link> <link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_matcher_method_1ae0920ff9e817acf08e1bb0cbcb044e30">match</link> (<link linkend="_struct_catch_1_1true__given">ObjectT</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp;<link linkend="_struct_catch_1_1true__given">arg</link>) <link linkend="_struct_catch_1_1true__given">const</link> =0</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>std::vector&lt; <link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base">MatcherBase</link>&lt; <link linkend="_struct_catch_1_1true__given">ArgT</link> &gt; <link linkend="_struct_catch_1_1true__given">const</link>  * &gt; <link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of_1a1fb1119e6110dc15b8d5262ec0aeddd5">m_matchers</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
Protected Member Functions inherited from <link linkend="_class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base">Catch::Matchers::Impl::MatcherUntypedBase</link>        <itemizedlist>
            <listitem><para><link linkend="_struct_catch_1_1true__given">virtual</link> <link linkend="_class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a853be93ce33f71b5abede38081c79e9d">~MatcherUntypedBase</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
Protected Attributes inherited from <link linkend="_class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base">Catch::Matchers::Impl::MatcherUntypedBase</link>        <itemizedlist>
            <listitem><para>std::string <link linkend="_class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a951095c462657e7097a9a6dc4dde813f">m_cachedToString</link></para>
</listitem>
        </itemizedlist>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of_1a315285204df93d1f8e72f50dd66eb709"/><section>
    <title>describe()</title>
<indexterm><primary>describe</primary><secondary>Catch::Matchers::Impl::MatchAnyOf&lt; ArgT &gt;</secondary></indexterm>
<indexterm><primary>Catch::Matchers::Impl::MatchAnyOf&lt; ArgT &gt;</primary><secondary>describe</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1true__given">typename</link> <link linkend="_struct_catch_1_1true__given">ArgT</link> &gt; </computeroutput><para><computeroutput>std::string <link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of">Catch::Matchers::Impl::MatchAnyOf</link>&lt; <link linkend="_struct_catch_1_1true__given">ArgT</link> &gt;::describe ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a91d3a907dbfcbb596077df24f6e11fe2">Catch::Matchers::Impl::MatcherUntypedBase</link>.</para>
</section>
<anchor xml:id="_struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of_1a8a3e8338f979e56277dcf553efb78dc0"/><section>
    <title>match()</title>
<indexterm><primary>match</primary><secondary>Catch::Matchers::Impl::MatchAnyOf&lt; ArgT &gt;</secondary></indexterm>
<indexterm><primary>Catch::Matchers::Impl::MatchAnyOf&lt; ArgT &gt;</primary><secondary>match</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1true__given">typename</link> <link linkend="_struct_catch_1_1true__given">ArgT</link> &gt; </computeroutput><para><computeroutput><link linkend="_struct_catch_1_1true__given">bool</link> <link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of">Catch::Matchers::Impl::MatchAnyOf</link>&lt; <link linkend="_struct_catch_1_1true__given">ArgT</link> &gt;::match (<link linkend="_struct_catch_1_1true__given">ArgT</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp; arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[override]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of_1add743d0bf073b81a204dc9997fbd2e30"/><section>
    <title>operator||()</title>
<indexterm><primary>operator||</primary><secondary>Catch::Matchers::Impl::MatchAnyOf&lt; ArgT &gt;</secondary></indexterm>
<indexterm><primary>Catch::Matchers::Impl::MatchAnyOf&lt; ArgT &gt;</primary><secondary>operator||</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1true__given">typename</link> <link linkend="_struct_catch_1_1true__given">ArgT</link> &gt; </computeroutput><para><computeroutput><link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of">MatchAnyOf</link>&lt; <link linkend="_struct_catch_1_1true__given">ArgT</link> &gt; <link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of">Catch::Matchers::Impl::MatchAnyOf</link>&lt; <link linkend="_struct_catch_1_1true__given">ArgT</link> &gt;::operator|| (<link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base">MatcherBase</link>&lt; <link linkend="_struct_catch_1_1true__given">ArgT</link> &gt; <link linkend="_struct_catch_1_1true__given">const</link> &amp; other)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of_1a1fb1119e6110dc15b8d5262ec0aeddd5"/><section>
    <title>m_matchers</title>
<indexterm><primary>m_matchers</primary><secondary>Catch::Matchers::Impl::MatchAnyOf&lt; ArgT &gt;</secondary></indexterm>
<indexterm><primary>Catch::Matchers::Impl::MatchAnyOf&lt; ArgT &gt;</primary><secondary>m_matchers</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1true__given">typename</link> <link linkend="_struct_catch_1_1true__given">ArgT</link> &gt; </computeroutput><para><computeroutput>std::vector&lt;<link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base">MatcherBase</link>&lt;<link linkend="_struct_catch_1_1true__given">ArgT</link>&gt; <link linkend="_struct_catch_1_1true__given">const</link>*&gt; <link linkend="_struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of">Catch::Matchers::Impl::MatchAnyOf</link>&lt; <link linkend="_struct_catch_1_1true__given">ArgT</link> &gt;::m_matchers</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
/Users/u0858882/Desktop/msdscript/msdscript/src/<link linkend="_catch_8h">catch.h</link></section>
</section>
