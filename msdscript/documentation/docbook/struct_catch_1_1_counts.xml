<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_catch_1_1_counts" xml:lang="en-US">
<title>Catch::Counts Struct Reference</title>
<indexterm><primary>Catch::Counts</primary></indexterm>
<para>
<computeroutput>#include &lt;catch.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_catch_1_1_counts">Counts</link> <link linkend="_struct_catch_1_1_counts_1aaa10666f559057e3e860d2a5a6fae4c4">operator-</link> (<link linkend="_struct_catch_1_1_counts">Counts</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp;<link linkend="_struct_catch_1_1true__given">other</link>) <link linkend="_struct_catch_1_1true__given">const</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1_counts">Counts</link> &amp; <link linkend="_struct_catch_1_1_counts_1a0c4a2295b896e189cdf4663377e156df">operator+=</link> (<link linkend="_struct_catch_1_1_counts">Counts</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp;<link linkend="_struct_catch_1_1true__given">other</link>)</para>
</listitem>
            <listitem><para>std::size_t <link linkend="_struct_catch_1_1_counts_1a94f969c09cf52d1339c085c9603cd1d3">total</link> () <link linkend="_struct_catch_1_1true__given">const</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">bool</link> <link linkend="_struct_catch_1_1_counts_1a84999490e0ecaa3de5e121bf48eda1b3">allPassed</link> () <link linkend="_struct_catch_1_1true__given">const</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">bool</link> <link linkend="_struct_catch_1_1_counts_1a33bd996e016030155b99fe1c51c08991">allOk</link> () <link linkend="_struct_catch_1_1true__given">const</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>std::size_t <link linkend="_struct_catch_1_1_counts_1ad28daaf3de28006400208b6dd0c631e6">passed</link> = 0</para>
</listitem>
            <listitem><para>std::size_t <link linkend="_struct_catch_1_1_counts_1a19982a3817a3bc2c07f0290e71f497a3">failed</link> = 0</para>
</listitem>
            <listitem><para>std::size_t <link linkend="_struct_catch_1_1_counts_1ac090973a2ff51394cd452718e75c073e">failedButOk</link> = 0</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_catch_1_1_counts_1a33bd996e016030155b99fe1c51c08991"/><section>
    <title>allOk()</title>
<indexterm><primary>allOk</primary><secondary>Catch::Counts</secondary></indexterm>
<indexterm><primary>Catch::Counts</primary><secondary>allOk</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">bool</link> Catch::Counts::allOk ( ) const</computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_counts_1a84999490e0ecaa3de5e121bf48eda1b3"/><section>
    <title>allPassed()</title>
<indexterm><primary>allPassed</primary><secondary>Catch::Counts</secondary></indexterm>
<indexterm><primary>Catch::Counts</primary><secondary>allPassed</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">bool</link> Catch::Counts::allPassed ( ) const</computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_counts_1a0c4a2295b896e189cdf4663377e156df"/><section>
    <title>operator+=()</title>
<indexterm><primary>operator+=</primary><secondary>Catch::Counts</secondary></indexterm>
<indexterm><primary>Catch::Counts</primary><secondary>operator+=</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1_counts">Counts</link> &amp; Catch::Counts::operator+= (<link linkend="_struct_catch_1_1_counts">Counts</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp; other)</computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_counts_1aaa10666f559057e3e860d2a5a6fae4c4"/><section>
    <title>operator-()</title>
<indexterm><primary>operator-</primary><secondary>Catch::Counts</secondary></indexterm>
<indexterm><primary>Catch::Counts</primary><secondary>operator-</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1_counts">Counts</link> Catch::Counts::operator- (<link linkend="_struct_catch_1_1_counts">Counts</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp; other) const</computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_counts_1a94f969c09cf52d1339c085c9603cd1d3"/><section>
    <title>total()</title>
<indexterm><primary>total</primary><secondary>Catch::Counts</secondary></indexterm>
<indexterm><primary>Catch::Counts</primary><secondary>total</secondary></indexterm>
<para><computeroutput>std::size_t Catch::Counts::total ( ) const</computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_catch_1_1_counts_1a19982a3817a3bc2c07f0290e71f497a3"/><section>
    <title>failed</title>
<indexterm><primary>failed</primary><secondary>Catch::Counts</secondary></indexterm>
<indexterm><primary>Catch::Counts</primary><secondary>failed</secondary></indexterm>
<para><computeroutput>std::size_t Catch::Counts::failed = 0</computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_counts_1ac090973a2ff51394cd452718e75c073e"/><section>
    <title>failedButOk</title>
<indexterm><primary>failedButOk</primary><secondary>Catch::Counts</secondary></indexterm>
<indexterm><primary>Catch::Counts</primary><secondary>failedButOk</secondary></indexterm>
<para><computeroutput>std::size_t Catch::Counts::failedButOk = 0</computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_counts_1ad28daaf3de28006400208b6dd0c631e6"/><section>
    <title>passed</title>
<indexterm><primary>passed</primary><secondary>Catch::Counts</secondary></indexterm>
<indexterm><primary>Catch::Counts</primary><secondary>passed</secondary></indexterm>
<para><computeroutput>std::size_t Catch::Counts::passed = 0</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
/Users/u0858882/Desktop/msdscript/msdscript/src/<link linkend="_catch_8h">catch.h</link></section>
</section>
