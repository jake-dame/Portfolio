<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_catch_1_1_source_line_info" xml:lang="en-US">
<title>Catch::SourceLineInfo Struct Reference</title>
<indexterm><primary>Catch::SourceLineInfo</primary></indexterm>
<para>
<computeroutput>#include &lt;catch.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_catch_1_1_source_line_info_1a2d80932bb4129b1606d1924a5c44be2f">SourceLineInfo</link> ()=<link linkend="_struct_catch_1_1true__given">delete</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1_source_line_info_1a48510b82a39a042ab370ed143dd30c10">SourceLineInfo</link> (<link linkend="_struct_catch_1_1true__given">char</link> <link linkend="_struct_catch_1_1true__given">const</link> *<link linkend="_struct_catch_1_1true__given">_file</link>, std::size_t <link linkend="_struct_catch_1_1true__given">_line</link>) <link linkend="_struct_catch_1_1true__given">noexcept</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1_source_line_info_1a7c44c9986c33a9cf842b791374332d41">SourceLineInfo</link> (<link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp;<link linkend="_struct_catch_1_1true__given">other</link>)=<link linkend="_struct_catch_1_1true__given">default</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> &amp; <link linkend="_struct_catch_1_1_source_line_info_1ab9891ccc4e7fa7c1ab747cd013341482">operator=</link> (<link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp;)=<link linkend="_struct_catch_1_1true__given">default</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1_source_line_info_1a5ea6179645457b8ec961aec9ca4c5588">SourceLineInfo</link> (<link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> &amp;&amp;) <link linkend="_struct_catch_1_1true__given">noexcept</link>=<link linkend="_struct_catch_1_1true__given">default</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> &amp; <link linkend="_struct_catch_1_1_source_line_info_1a1efc6194265495c99bb455c69fb1c904">operator=</link> (<link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> &amp;&amp;) <link linkend="_struct_catch_1_1true__given">noexcept</link>=<link linkend="_struct_catch_1_1true__given">default</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">bool</link> <link linkend="_struct_catch_1_1_source_line_info_1a10a5b5b7dff82971879c2eb8d83f9b3b">empty</link> () <link linkend="_struct_catch_1_1true__given">const</link> <link linkend="_struct_catch_1_1true__given">noexcept</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">bool</link> <link linkend="_struct_catch_1_1_source_line_info_1af07e4fdeddf8409b91e4f842f6264cf8">operator==</link> (<link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp;<link linkend="_struct_catch_1_1true__given">other</link>) <link linkend="_struct_catch_1_1true__given">const</link> <link linkend="_struct_catch_1_1true__given">noexcept</link></para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">bool</link> <link linkend="_struct_catch_1_1_source_line_info_1af77415416919d2d6030b4be085b92f7a">operator&lt;</link> (<link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp;<link linkend="_struct_catch_1_1true__given">other</link>) <link linkend="_struct_catch_1_1true__given">const</link> <link linkend="_struct_catch_1_1true__given">noexcept</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_catch_1_1true__given">char</link> <link linkend="_struct_catch_1_1true__given">const</link>  * <link linkend="_struct_catch_1_1_source_line_info_1ad65537703e9f08c1fa7777fbc3f0c617">file</link></para>
</listitem>
            <listitem><para>std::size_t <link linkend="_struct_catch_1_1_source_line_info_1a841e5d696c7b9cde24e45e61dd979c77">line</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_catch_1_1_source_line_info_1a2d80932bb4129b1606d1924a5c44be2f"/><section>
    <title>SourceLineInfo()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>SourceLineInfo</primary><secondary>Catch::SourceLineInfo</secondary></indexterm>
<indexterm><primary>Catch::SourceLineInfo</primary><secondary>SourceLineInfo</secondary></indexterm>
<para><computeroutput>Catch::SourceLineInfo::SourceLineInfo ( )<computeroutput>[delete]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_source_line_info_1a48510b82a39a042ab370ed143dd30c10"/><section>
    <title>SourceLineInfo()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>SourceLineInfo</primary><secondary>Catch::SourceLineInfo</secondary></indexterm>
<indexterm><primary>Catch::SourceLineInfo</primary><secondary>SourceLineInfo</secondary></indexterm>
<para><computeroutput>Catch::SourceLineInfo::SourceLineInfo (<link linkend="_struct_catch_1_1true__given">char</link> <link linkend="_struct_catch_1_1true__given">const</link> * _file, std::size_t _line)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_source_line_info_1a7c44c9986c33a9cf842b791374332d41"/><section>
    <title>SourceLineInfo()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>SourceLineInfo</primary><secondary>Catch::SourceLineInfo</secondary></indexterm>
<indexterm><primary>Catch::SourceLineInfo</primary><secondary>SourceLineInfo</secondary></indexterm>
<para><computeroutput>Catch::SourceLineInfo::SourceLineInfo (<link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp; other)<computeroutput>[default]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_source_line_info_1a5ea6179645457b8ec961aec9ca4c5588"/><section>
    <title>SourceLineInfo()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>SourceLineInfo</primary><secondary>Catch::SourceLineInfo</secondary></indexterm>
<indexterm><primary>Catch::SourceLineInfo</primary><secondary>SourceLineInfo</secondary></indexterm>
<para><computeroutput>Catch::SourceLineInfo::SourceLineInfo (<link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> &amp;&amp; )<computeroutput>[default]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_catch_1_1_source_line_info_1a10a5b5b7dff82971879c2eb8d83f9b3b"/><section>
    <title>empty()</title>
<indexterm><primary>empty</primary><secondary>Catch::SourceLineInfo</secondary></indexterm>
<indexterm><primary>Catch::SourceLineInfo</primary><secondary>empty</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">bool</link> Catch::SourceLineInfo::empty ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_source_line_info_1af77415416919d2d6030b4be085b92f7a"/><section>
    <title>operator&lt;()</title>
<indexterm><primary>operator&lt;</primary><secondary>Catch::SourceLineInfo</secondary></indexterm>
<indexterm><primary>Catch::SourceLineInfo</primary><secondary>operator&lt;</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">bool</link> Catch::SourceLineInfo::operator&lt; (<link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp; other) const<computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_source_line_info_1a1efc6194265495c99bb455c69fb1c904"/><section>
    <title>operator=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>Catch::SourceLineInfo</secondary></indexterm>
<indexterm><primary>Catch::SourceLineInfo</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> &amp; Catch::SourceLineInfo::operator= (<link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> &amp;&amp; )<computeroutput>[default]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_source_line_info_1ab9891ccc4e7fa7c1ab747cd013341482"/><section>
    <title>operator=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>Catch::SourceLineInfo</secondary></indexterm>
<indexterm><primary>Catch::SourceLineInfo</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> &amp; Catch::SourceLineInfo::operator= (<link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp; )<computeroutput>[default]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_source_line_info_1af07e4fdeddf8409b91e4f842f6264cf8"/><section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>Catch::SourceLineInfo</secondary></indexterm>
<indexterm><primary>Catch::SourceLineInfo</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">bool</link> Catch::SourceLineInfo::operator== (<link linkend="_struct_catch_1_1_source_line_info">SourceLineInfo</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp; other) const<computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_catch_1_1_source_line_info_1ad65537703e9f08c1fa7777fbc3f0c617"/><section>
    <title>file</title>
<indexterm><primary>file</primary><secondary>Catch::SourceLineInfo</secondary></indexterm>
<indexterm><primary>Catch::SourceLineInfo</primary><secondary>file</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">char</link> <link linkend="_struct_catch_1_1true__given">const</link>* Catch::SourceLineInfo::file</computeroutput></para></section>
<anchor xml:id="_struct_catch_1_1_source_line_info_1a841e5d696c7b9cde24e45e61dd979c77"/><section>
    <title>line</title>
<indexterm><primary>line</primary><secondary>Catch::SourceLineInfo</secondary></indexterm>
<indexterm><primary>Catch::SourceLineInfo</primary><secondary>line</secondary></indexterm>
<para><computeroutput>std::size_t Catch::SourceLineInfo::line</computeroutput></para></section>
<para>
The documentation for this struct was generated from the following file:</para>
/Users/u0858882/Desktop/msdscript/msdscript/src/<link linkend="_catch_8h">catch.h</link></section>
</section>
