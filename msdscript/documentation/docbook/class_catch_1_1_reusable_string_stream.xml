<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_catch_1_1_reusable_string_stream" xml:lang="en-US">
<title>Catch::ReusableStringStream Class Reference</title>
<indexterm><primary>Catch::ReusableStringStream</primary></indexterm>
<para>
<computeroutput>#include &lt;catch.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for Catch::ReusableStringStream:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_catch_1_1_reusable_string_stream.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_catch_1_1_reusable_string_stream_1a9b3f8c52b0d2d63ffd825297a9c09781">ReusableStringStream</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_catch_1_1_reusable_string_stream_1aba9384e258a4db3178447b6a58414712">~ReusableStringStream</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">auto</link> <link linkend="_class_catch_1_1_reusable_string_stream_1a0e9ecf260b2a5d35f4886ef0d51f6270">str</link> () <link linkend="_struct_catch_1_1true__given">const</link> -&gt; std::string</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_struct_catch_1_1true__given">typename</link> <link linkend="_struct_catch_1_1true__given">T</link> &gt; </para><para><link linkend="_struct_catch_1_1true__given">auto</link> <link linkend="_class_catch_1_1_reusable_string_stream_1af95f72024c082db70e5e50782e28e4f6">operator&lt;&lt;</link> (<link linkend="_struct_catch_1_1true__given">T</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp;value) -&gt; <link linkend="_class_catch_1_1_reusable_string_stream">ReusableStringStream</link> &amp;</para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">auto</link> <link linkend="_class_catch_1_1_reusable_string_stream_1a6881808c60a080d4e24a0b81c94cbf67">get</link> () -&gt; std::ostream &amp;</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>std::size_t <link linkend="_class_catch_1_1_reusable_string_stream_1a6e8154ffe67117de424c491e3b192504">m_index</link></para>
</listitem>
            <listitem><para>std::ostream * <link linkend="_class_catch_1_1_reusable_string_stream_1ae8dc0aa8ab418990869cd5ea9ee51f14">m_oss</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
Private Member Functions inherited from <link linkend="_class_catch_1_1_non_copyable">Catch::NonCopyable</link>        <itemizedlist>
            <listitem><para><link linkend="_class_catch_1_1_non_copyable_1a4b492dd5753f9952350fb64dc6cb9fe2">NonCopyable</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_catch_1_1true__given">virtual</link> <link linkend="_class_catch_1_1_non_copyable_1a81254677280fef337eb4a676e91e3293">~NonCopyable</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_catch_1_1_reusable_string_stream_1a9b3f8c52b0d2d63ffd825297a9c09781"/><section>
    <title>ReusableStringStream()</title>
<indexterm><primary>ReusableStringStream</primary><secondary>Catch::ReusableStringStream</secondary></indexterm>
<indexterm><primary>Catch::ReusableStringStream</primary><secondary>ReusableStringStream</secondary></indexterm>
<para><computeroutput>Catch::ReusableStringStream::ReusableStringStream ( )</computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_reusable_string_stream_1aba9384e258a4db3178447b6a58414712"/><section>
    <title>~ReusableStringStream()</title>
<indexterm><primary>~ReusableStringStream</primary><secondary>Catch::ReusableStringStream</secondary></indexterm>
<indexterm><primary>Catch::ReusableStringStream</primary><secondary>~ReusableStringStream</secondary></indexterm>
<para><computeroutput>Catch::ReusableStringStream::~ReusableStringStream ( )</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_catch_1_1_reusable_string_stream_1a6881808c60a080d4e24a0b81c94cbf67"/><section>
    <title>get()</title>
<indexterm><primary>get</primary><secondary>Catch::ReusableStringStream</secondary></indexterm>
<indexterm><primary>Catch::ReusableStringStream</primary><secondary>get</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">auto</link> Catch::ReusableStringStream::get ( ) -&gt; std::ostream&amp; <computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_reusable_string_stream_1af95f72024c082db70e5e50782e28e4f6"/><section>
    <title>operator&lt;&lt;()</title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>Catch::ReusableStringStream</secondary></indexterm>
<indexterm><primary>Catch::ReusableStringStream</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_struct_catch_1_1true__given">typename</link> <link linkend="_struct_catch_1_1true__given">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_struct_catch_1_1true__given">auto</link> Catch::ReusableStringStream::operator&lt;&lt; (<link linkend="_struct_catch_1_1true__given">T</link> <link linkend="_struct_catch_1_1true__given">const</link> &amp; value) -&gt; <link linkend="_class_catch_1_1_reusable_string_stream">ReusableStringStream</link>&amp; <computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_reusable_string_stream_1a0e9ecf260b2a5d35f4886ef0d51f6270"/><section>
    <title>str()</title>
<indexterm><primary>str</primary><secondary>Catch::ReusableStringStream</secondary></indexterm>
<indexterm><primary>Catch::ReusableStringStream</primary><secondary>str</secondary></indexterm>
<para><computeroutput><link linkend="_struct_catch_1_1true__given">auto</link> Catch::ReusableStringStream::str ( ) const -&gt;  std::string</computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_catch_1_1_reusable_string_stream_1a6e8154ffe67117de424c491e3b192504"/><section>
    <title>m_index</title>
<indexterm><primary>m_index</primary><secondary>Catch::ReusableStringStream</secondary></indexterm>
<indexterm><primary>Catch::ReusableStringStream</primary><secondary>m_index</secondary></indexterm>
<para><computeroutput>std::size_t Catch::ReusableStringStream::m_index<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_catch_1_1_reusable_string_stream_1ae8dc0aa8ab418990869cd5ea9ee51f14"/><section>
    <title>m_oss</title>
<indexterm><primary>m_oss</primary><secondary>Catch::ReusableStringStream</secondary></indexterm>
<indexterm><primary>Catch::ReusableStringStream</primary><secondary>m_oss</secondary></indexterm>
<para><computeroutput>std::ostream* Catch::ReusableStringStream::m_oss<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
/Users/u0858882/Desktop/msdscript/msdscript/src/<link linkend="_catch_8h">catch.h</link></section>
</section>
